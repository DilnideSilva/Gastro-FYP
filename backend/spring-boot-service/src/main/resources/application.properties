# Spring Boot Configuration for GastroSphere

# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Application Configuration
spring.application.name=gastrosphere-api
spring.profiles.active=development

# Google Cloud Firestore Configuration
google.cloud.project-id=your-project-id
google.cloud.firestore.database-id=(default)
google.cloud.credentials.location=classpath:firebase-service-account.json

# Security Configuration
app.jwt.secret=your-jwt-secret-key
app.jwt.expiration=86400000

# CORS Configuration
app.cors.allowed-origins=http://localhost:3000,http://localhost:5000
app.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
app.cors.allowed-headers=*

# Logging Configuration
logging.level.com.gastrosphere=DEBUG
logging.level.org.springframework.security=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
logging.file.name=logs/gastrosphere-api.log

# Management and Monitoring
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=when-authorized
management.metrics.export.prometheus.enabled=true

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Python Service Integration
python.service.url=http://localhost:5000
python.service.timeout=30000

# Rate Limiting
app.rate-limit.requests-per-minute=100
app.rate-limit.requests-per-hour=1000
